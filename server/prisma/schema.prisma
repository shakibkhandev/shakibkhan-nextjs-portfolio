// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OAuthProvider {
  GOOGLE
  GITHUB
  EMAIL
}



model User {
  id         String   @id @default(cuid())
  name       String
  email       String
  avatar String? @default("https://dummyimage.com/600x400/000/fff&text=P")
  password   String?
  provider OAuthProvider @default(EMAIL)
  isAdmin Boolean @default(false)
  refreshToken String?
  forgotPasswordToken String?
  forgotPasswordExpiry DateTime?
  emailVerificationToken String?
  emailVerificationExpiry DateTime?
  isEmailVerified Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt  DateTime  @updatedAt 
}

model Portfolio {
  id         String   @id @default(cuid())
  email String
  x_url String
  github_url String
  linkedin_url String
  facebook_url String
  name String
  about String
  bio String @default("Nothing To Say")
  image_url String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  education Education[]
  skills       Skill[]
  projects       Project[]
  workExperience WorkExperience[]
}


model Education {
  id         String   @id @default(cuid())
  institution String
  degree    String
  startDate  DateTime
  endDate    DateTime
  status String
  portfolioId String
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
}

model Skill {
  id         String   @id @default(cuid())
  label     String @unique
  url String?
  portfolioId String
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
  projects Project[]
}

model Project {
  id         String   @id @default(cuid())
  name       String
  description String
  startDate  DateTime
  endDate    DateTime
  image_url String
  web_url        String
  skills Skill[]
  portfolioId String
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
}

model WorkExperience {
  id         String   @id @default(cuid())
  companyName String
  position    String
  startDate  DateTime
  endDate    DateTime
  portfolioId String
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
}



model Blog{
  id         String   @id @default(cuid())
  slug String @unique
  title       String
  description String
  image_url String
  content     String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  readingTime Int
  isHidden Boolean @default(false)
  tags Tag[]
}

model Tag {
  id         String   @id @default(cuid())
  label String @unique
  blogs Blog[]
}

model Newsletter {
  id         String   @id @default(cuid())
  email String @unique
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}